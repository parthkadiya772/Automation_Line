<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.10">
  <POU Name="ABBAssemble" Id="{f7786b1f-9afc-4736-8610-0d6d52995aad}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK ABBAssemble
VAR_INPUT
	mxEnable: BOOL;
	mwBufferID: INT;
END_VAR
VAR_OUTPUT
	mxDone: BOOL;
	mxExecuting: BOOL;
	mxError: BOOL;
END_VAR
VAR
	ABB: INT;
	mwPlatecount: INT;
	mwordernumber: DINT;
END_VAR
VAR_INPUT
	mwAssemblePartno: INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE ABB OF
	0:
		IF mxEnable AND NOT CommData.mxABBExecuting THEN
			ABB:=10;
		END_IF
	10:
		IF CommData.mxRobotOnline THEN
			ABB:=11;
			ELSE
			ABB:=12;
		END_IF
	11:
		IF CommData.msRobotLastPos = 'Table' AND gvl.BufferProducts.Storage1.Quatity <> 0 AND gvl.BufferProducts.Storage2.Quatity <> 0 AND gvl.BufferProducts.Storage3.Quatity <> 0 THEN
			ABB:=111;
		ELSE
			ABB:=1000;
		END_IF
	111:
		mxExecuting:=TRUE;
		CommData.maOrderMaker[1] := 8;
		CommData.maOrderMaker[2] := 0;
		IF mwAssemblePartno =3 THEN
			abb:=112;
		ELSIF mwAssemblePartno =2 THEN
			abb:=113;
		ELSIF mwAssemblePartno =1 THEN
			abb:=114;
		END_IF	
	112:
		IF mwBufferID = 1 THEN
				CommData.maOrderMaker[3]:=mwBufferID;
				CommData.maOrderMaker[4]:=gvl.BufferProducts.Storage1.Quatity;
				CommData.maOrderMaker[5]:=mwAssemblePartno;
				CommData.maOrderMaker[6]:=0;
				abb:=115;
			ELSIF mwBufferID = 2 THEN
				CommData.maOrderMaker[3]:=mwBufferID;
				CommData.maOrderMaker[4]:=gvl.BufferProducts.Storage2.Quatity;
				CommData.maOrderMaker[5]:=mwAssemblePartno;
				CommData.maOrderMaker[6]:=0;
				abb:=115;
			ELSIF mwBufferID = 3 THEN
				CommData.maOrderMaker[3]:=mwBufferID;
				CommData.maOrderMaker[4]:=gvl.BufferProducts.Storage3.Quatity;
				CommData.maOrderMaker[5]:=mwAssemblePartno;
				CommData.maOrderMaker[6]:=0;
				abb:=115;
			ELSE
				ABB:=1000;
			END_IF
	113:
		IF mwBufferID = 1 THEN
				CommData.maOrderMaker[3]:=mwBufferID;
				CommData.maOrderMaker[4]:=gvl.BufferProducts.Storage1.Quatity;
				CommData.maOrderMaker[5]:=mwAssemblePartno;
				CommData.maOrderMaker[6]:=0;
				abb:=115;
			ELSIF mwBufferID = 2 THEN
				CommData.maOrderMaker[3]:=mwBufferID;
				CommData.maOrderMaker[4]:=gvl.BufferProducts.Storage2.Quatity;
				CommData.maOrderMaker[5]:=mwAssemblePartno;
				CommData.maOrderMaker[6]:=0;
				abb:=115;
			ELSIF mwBufferID = 3 THEN
				CommData.maOrderMaker[3]:=mwBufferID;
				CommData.maOrderMaker[4]:=gvl.BufferProducts.Storage3.Quatity;
				CommData.maOrderMaker[5]:=mwAssemblePartno;
				CommData.maOrderMaker[6]:=0;
				abb:=115;
			ELSE
				ABB:=1000;
			END_IF
	114:
		IF gvl.BufferProducts.Storage3.Quatity =2 THEN
			mwPlatecount:=6;
		ELSIF gvl.BufferProducts.Storage3.Quatity =1 THEN
			mwPlatecount:=5;
		END_IF
		IF mwBufferID = 1 THEN
				IF gvl.BufferProducts.Storage1.Quatity =2 THEN
					mwPlatecount:=6;
					abb:=1141;
				ELSIF gvl.BufferProducts.Storage1.Quatity =1 THEN
					mwPlatecount:=5;
					abb:=1141;
				END_IF
		ELSIF mwBufferID = 2 THEN
				IF gvl.BufferProducts.Storage2.Quatity =2 THEN
					mwPlatecount:=6;
					abb:=1141;
				ELSIF gvl.BufferProducts.Storage2.Quatity =1 THEN
					mwPlatecount:=5;
					abb:=1141;
				END_IF
		ELSIF mwBufferID = 3 THEN
				IF gvl.BufferProducts.Storage3.Quatity =2 THEN
					mwPlatecount:=6;
					abb:=1141;
				ELSIF gvl.BufferProducts.Storage3.Quatity =1 THEN
					mwPlatecount:=5;
					abb:=1141;
				END_IF
			ELSE
				ABB:=1000;
			END_IF
	1141:
		CommData.maOrderMaker[3]:=mwBufferID;
		CommData.maOrderMaker[4]:=mwPlatecount;
		CommData.maOrderMaker[5]:=mwAssemblePartno;
		CommData.maOrderMaker[6]:=0;
		abb:=115;
	115:
		IF CommData.maOrderMaker[1]=8 THEN
			mwordernumber:=CommData.maOrderMaker[1];
			mwordernumber:=mwordernumber*10;
			abb:=1151;
		END_IF
	1151:
			mwordernumber:=mwordernumber+CommData.maOrderMaker[2];
			abb:=1152;
	1152:
			mwordernumber:=mwordernumber*10;
			abb:=1153;
	1153:
			mwordernumber:=mwordernumber+CommData.maOrderMaker[3];
			abb:=1154;
	1154:
			mwordernumber:=mwordernumber*10;
			abb:=1155;
	1155:
			mwordernumber:=mwordernumber+CommData.maOrderMaker[4];
			abb:=1156;
	1156:
			mwordernumber:=mwordernumber*10;
			abb:=1157;
	1157:
			mwordernumber:=mwordernumber+CommData.maOrderMaker[5];
			abb:=1158;
	1158:
			mwordernumber:=mwordernumber*10;
			abb:=1159;
	1159:
			mwordernumber:=mwordernumber+CommData.maOrderMaker[6];
			ABB:=116;

	116:
		CommData.qwOrderRobot:=mwordernumber;
		ABB:=117;
	117:
		IF CommData.qwOrderRobot > 0 THEN
			CommData.qxPLCStrobe:=TRUE;
			ABB:=118;
		END_IF
	118:
		IF CommData.ixRobotStrobe THEN
			IF CommData.iwReplyRobot = CommData.qwOrderRobot+1 THEN
				CommData.qwOrderRobot:=0;
				mwordernumber:=0;
				CommData.qxPLCStrobe:=FALSE;
				ABB:=119;
			ELSE
				ABB:=1000;
			END_IF
		END_IF
	119:
		IF NOT CommData.ixRobotStrobe THEN
			IF CommData.iwReplyRobot = 0 THEN
				ABB:=120;
			ELSE
				ABB:=1000;
			END_IF
		END_IF
	120:
		IF CommData.ixRobotStrobe THEN
			IF CommData.iwProgressRobot = 90 THEN
				CommData.qxPLCStrobe:=TRUE;
				ABB:=121;
			END_IF
			IF CommData.iwProgressRobot = 1000 THEN
				CommData.qxPLCStrobe:=TRUE;
				ABB:=1000;
			END_IF
		END_IF
	121:
		IF  NOT CommData.ixRobotStrobe AND CommData.iwProgressRobot = 0 THEN
			CommData.qxPLCStrobe:=FALSE;
			ABB:=73;
		END_IF
	12:
		IF CommData.mwXaxis = CommData.ABBPostions.Tablehome.X AND CommData.mwYaxis = CommData.ABBPostions.Tablehome.Y THEN
			ABB:=20;
		ELSE
			ABB:=1000;
		END_IF
	20:
		mxExecuting:=TRUE;
		CommData.mwABBPosXaxis:=CommData.ABBPostions.Bufferhome.X;
		CommData.mwABBPosYaxis:=CommData.ABBPostions.Bufferhome.Y;
		CommData.mxStartABB:=TRUE;
		IF CommData.mwXaxis = CommData.ABBPostions.Bufferhome.X AND CommData.mwYaxis = CommData.ABBPostions.Bufferhome.Y THEN
			CommData.mxStartABB:=FALSE;
			ABB:=30;
		ELSIF gvl.ixEmergencyStop THEN
			ABB:=1000;
		END_IF
	30:
		IF mwBufferID = 1 THEN
			ABB:=40;
		ELSIF mwBufferID = 2 THEN
			ABB:=50;
		ELSIF mwBufferID = 3 THEN
			ABB:=60;
		ELSE
			ABB:=1000;//Error
		END_IF
	40:
		CommData.mwABBPosXaxis:=CommData.ABBPostions.Storage1.X;
		CommData.mwABBPosYaxis:=CommData.ABBPostions.Storage1.Y;
		CommData.mxStartABB:=TRUE;
		IF CommData.mwXaxis = CommData.ABBPostions.Storage1.X AND CommData.mwYaxis = CommData.ABBPostions.Storage1.Y THEN
			CommData.mxStartABB:=FALSE;
			ABB:=70;
		END_IF
	50:
		CommData.mwABBPosXaxis:=CommData.ABBPostions.Storage2.X;
		CommData.mwABBPosYaxis:=CommData.ABBPostions.Storage2.Y;
		CommData.mxStartABB:=TRUE;
		IF CommData.mwXaxis = CommData.ABBPostions.Storage2.X AND CommData.mwYaxis = CommData.ABBPostions.Storage2.Y THEN
			CommData.mxStartABB:=FALSE;
			ABB:=70;
		END_IF
	60:
		CommData.mwABBPosXaxis:=CommData.ABBPostions.Storage3.X;
		CommData.mwABBPosYaxis:=CommData.ABBPostions.Storage3.Y;
		CommData.mxStartABB:=TRUE;
		IF CommData.mwXaxis = CommData.ABBPostions.Storage3.X AND CommData.mwYaxis = CommData.ABBPostions.Storage3.Y THEN
			CommData.mxStartABB:=FALSE;
			ABB:=70;
		END_IF
		
		
		
	70:
		IF NOT CommData.mxABBExecuting THEN
			IF NOT CommData.mxGripper THEN
				CommData.mxGripper:=TRUE;
				ABB:=71;
			ELSE
				ABB:=1000;
			END_IF
		END_IF
	71:
		CommData.mwABBPosXaxis:=CommData.ABBPostions.Tablehome.X;
		CommData.mwABBPosYaxis:=CommData.ABBPostions.Tablehome.Y;
		CommData.mxStartABB:=TRUE;
		IF CommData.mwXaxis = CommData.ABBPostions.Tablehome.X AND CommData.mwYaxis = CommData.ABBPostions.Tablehome.Y THEN
			CommData.mxStartABB:=FALSE;
			ABB:=72;
		END_IF
	72:
		IF CommData.mxGripper THEN
			CommData.mxGripper:=FALSE;
			ABB:=73;
		ELSE
			ABB:=40;
		END_IF
	73:
		mxExecuting:=FALSE;
		mxDone:=TRUE;
		IF NOT mxEnable THEN
			mxError:=FALSE;
			mxDone:=FALSE;
			ABB:=0;
		END_IF
	1000:
		mxError:=TRUE;
		mxExecuting:=FALSE;
		CommData.mxStartABB:=FALSE;
		IF NOT mxEnable THEN
			mxError:=FALSE;
			mxDone:=FALSE;
			ABB:=0;
		END_IF
END_CASE


IF gvl.ixEmergencyStop THEN
	ABB:=1000;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="ABBAssemble">
      <LineId Id="888" Count="77" />
      <LineId Id="1183" Count="0" />
      <LineId Id="1190" Count="1" />
      <LineId Id="1200" Count="0" />
      <LineId Id="1192" Count="1" />
      <LineId Id="1201" Count="0" />
      <LineId Id="1188" Count="0" />
      <LineId Id="972" Count="0" />
      <LineId Id="1202" Count="5" />
      <LineId Id="977" Count="1" />
      <LineId Id="1208" Count="5" />
      <LineId Id="983" Count="3" />
      <LineId Id="1194" Count="0" />
      <LineId Id="1196" Count="2" />
      <LineId Id="1195" Count="0" />
      <LineId Id="1199" Count="0" />
      <LineId Id="987" Count="176" />
      <LineId Id="869" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>