<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.10">
  <POU Name="ABBPickLeaveBuffer" Id="{baa1c9d5-38d4-4bac-b370-ae40d1a65c00}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK ABBPickLeaveBuffer
VAR_INPUT
	mxEnable: BOOL;
	mxPick: BOOL;
	mwBufferID: INT;
END_VAR
VAR_OUTPUT
	mxDone: BOOL;
	mxExecuting: BOOL;
	mxError: BOOL;
END_VAR
VAR
	ABB: INT;
	mwordernumber: DINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE ABB OF
		0:
			IF mxEnable AND NOT CommData.mxABBExecuting THEN
				ABB:=1;
			END_IF
		1:
			IF CommData.mxRobotOnline THEN
				ABB:=100;
				ELSE
				ABB:=200;
			END_IF
		100:
			IF CommData.msRobotLastPos = 'Buffer' THEN
				ABB:=101;
			ELSE
				ABB:=1000;
			END_IF
		101:
			mxExecuting:=TRUE;
			CommData.maOrderMaker[1] := 9;
			CommData.maOrderMaker[4] := 0;
			CommData.maOrderMaker[5] := 0;
			CommData.maOrderMaker[6] := 0;
			ABB:=102;
		102:
			IF mxPick THEN
				CommData.maOrderMaker[2] := 1;
				ABB:=1021;
			ELSIF NOT mxPick THEN
				CommData.maOrderMaker[2] := 0;
				ABB:=1021;
			END_IF
		1021:
			IF mwBufferID = 1 OR mwBufferID = 2 OR mwBufferID = 3 THEN
				CommData.maOrderMaker[3] := mwBufferID;
				ABB:=103;
			ELSE
				ABB:=1000;//Error
			END_IF
		103:
				mwordernumber:=CommData.maOrderMaker[1];
				mwordernumber:=mwordernumber*10;
				abb:=1151;
		1151:
				mwordernumber:=mwordernumber+CommData.maOrderMaker[2];
				abb:=1152;
		1152:
				mwordernumber:=mwordernumber*10;
				abb:=1153;
		1153:
				mwordernumber:=mwordernumber+CommData.maOrderMaker[3];
				abb:=1154;
		1154:
				mwordernumber:=mwordernumber*10;
				abb:=1155;
		1155:
				mwordernumber:=mwordernumber+CommData.maOrderMaker[4];
				abb:=1156;
		1156:
				mwordernumber:=mwordernumber*10;
				abb:=1157;
		1157:
				mwordernumber:=mwordernumber+CommData.maOrderMaker[5];
				abb:=1158;
		1158:
				mwordernumber:=mwordernumber*10;
				abb:=1159;
		1159:
				mwordernumber:=mwordernumber+CommData.maOrderMaker[6];
				ABB:=1160;
		1160:
			CommData.qwOrderRobot:=mwordernumber;
			ABB:=104;
		104:
			IF CommData.qwOrderRobot > 0 THEN
				CommData.qxPLCStrobe:=TRUE;
				ABB:=105;
			END_IF
		105:
			IF CommData.ixRobotStrobe THEN
				IF CommData.iwReplyRobot = CommData.qwOrderRobot+1 THEN
					CommData.qwOrderRobot:=0;
					mwordernumber:=0;
					CommData.qxPLCStrobe:=FALSE;
					ABB:=106;
				ELSE
					ABB:=1000;
				END_IF
			END_IF
		106:
			IF NOT CommData.ixRobotStrobe THEN
				IF CommData.iwReplyRobot = 0 THEN
						ABB:=107;
					ELSE
						ABB:=1000;
				END_IF
			END_IF
		107:
			IF CommData.ixRobotStrobe THEN
				IF CommData.iwProgressRobot = 90 THEN
					CommData.qxPLCStrobe:=TRUE;
					ABB:=108;
				END_IF
				IF CommData.iwProgressRobot = 1000 THEN
					CommData.qxPLCStrobe:=TRUE;
					ABB:=1000;
				END_IF
			END_IF
		108:
			IF  NOT CommData.ixRobotStrobe AND CommData.iwProgressRobot = 0 THEN
				CommData.qxPLCStrobe:=FALSE;
				ABB:=33;
			END_IF
	
		
		
		200:
			IF mwBufferID = 1 THEN
				ABB:=10;
			ELSIF mwBufferID = 2 THEN
				ABB:=20;
			ELSIF mwBufferID = 3 THEN
				ABB:=30;
			ELSE
				ABB:=1000;//Error
			END_IF
		10:
			IF CommData.mwXaxis = CommData.ABBPostions.Bufferhome.X AND CommData.mwYaxis = CommData.ABBPostions.Bufferhome.Y THEN
				ABB:=11;
			ELSE
				ABB:=1000;
			END_IF
		11:
			CommData.mwABBPosXaxis:=CommData.ABBPostions.Storage1.X;
			CommData.mwABBPosYaxis:=CommData.ABBPostions.Storage1.Y;
			mxExecuting:=TRUE;
			CommData.mxStartABB:=TRUE;
			IF CommData.mwXaxis = CommData.ABBPostions.Storage1.X AND CommData.mwYaxis = CommData.ABBPostions.Storage1.Y THEN
				CommData.mxStartABB:=FALSE;
				ABB:=12;
			ELSIF gvl.ixEmergencyStop THEN
				ABB:=1000;
			END_IF
		12:
			IF mxpick THEN
				IF NOT CommData.mxGripper THEN
					CommData.mxGripper:=TRUE;
					ABB:=13;
				ELSE
					ABB:=1000;
				END_IF
			ELSIF NOT mxPick THEN
				IF CommData.mxGripper THEN
					CommData.mxGripper:=FALSE;
					ABB:=13;
				ELSE
					ABB:=1000;
				END_IF
			END_IF
		13:
			mxExecuting:=FALSE;
			mxDone:=TRUE;
			IF NOT mxEnable THEN
				mxError:=FALSE;
				mxDone:=FALSE;
				ABB:=0;
			END_IF
		
		20:
			IF CommData.mwXaxis = CommData.ABBPostions.Bufferhome.X AND CommData.mwYaxis = CommData.ABBPostions.Bufferhome.Y THEN
				ABB:=21;
			ELSE
				ABB:=1000;
			END_IF
		21:
			CommData.mwABBPosXaxis:=CommData.ABBPostions.Storage2.X;
			CommData.mwABBPosYaxis:=CommData.ABBPostions.Storage2.Y;
			mxExecuting:=TRUE;
			CommData.mxStartABB:=TRUE;
			IF CommData.mwXaxis = CommData.ABBPostions.Storage2.X AND CommData.mwYaxis = CommData.ABBPostions.Storage2.Y THEN
				CommData.mxStartABB:=FALSE;
				ABB:=22;
			ELSIF gvl.ixEmergencyStop THEN
				ABB:=1000;
			END_IF
		22:
			IF mxpick THEN
				IF NOT CommData.mxGripper THEN
					CommData.mxGripper:=TRUE;
					ABB:=23;
				ELSE
					ABB:=1000;
				END_IF
			ELSIF NOT mxPick THEN
				IF CommData.mxGripper THEN
					CommData.mxGripper:=FALSE;
					ABB:=23;
				ELSE
					ABB:=1000;
				END_IF
			END_IF
		23:
			mxExecuting:=FALSE;
			mxDone:=TRUE;
			IF NOT mxEnable THEN
				mxError:=FALSE;
				mxDone:=FALSE;
				ABB:=0;
			END_IF
		

		30:
			IF CommData.mwXaxis = CommData.ABBPostions.Bufferhome.X AND CommData.mwYaxis = CommData.ABBPostions.Bufferhome.Y THEN
				ABB:=31;
			ELSE
				ABB:=1000;
			END_IF
		31:
			CommData.mwABBPosXaxis:=CommData.ABBPostions.Storage3.X;
			CommData.mwABBPosYaxis:=CommData.ABBPostions.Storage3.Y;
			mxExecuting:=TRUE;
			CommData.mxStartABB:=TRUE;
			IF CommData.mwXaxis = CommData.ABBPostions.Storage3.X AND CommData.mwYaxis = CommData.ABBPostions.Storage3.Y THEN
				CommData.mxStartABB:=FALSE;
				ABB:=32;
			ELSIF gvl.ixEmergencyStop THEN
				ABB:=1000;
			END_IF
		32:
			IF mxpick THEN
				IF NOT CommData.mxGripper THEN
					CommData.mxGripper:=TRUE;
					ABB:=33;
				ELSE
					ABB:=1000;
				END_IF
			ELSIF NOT mxPick THEN
				IF CommData.mxGripper THEN
					CommData.mxGripper:=FALSE;
					ABB:=33;
				ELSE
					ABB:=1000;
				END_IF
			END_IF
		33:
			mxExecuting:=FALSE;
			mxDone:=TRUE;
			IF NOT mxEnable THEN
				mxError:=FALSE;
				mxDone:=FALSE;
				ABB:=0;
			END_IF	

		1000:
			mxError:=TRUE;
			IF NOT mxEnable THEN
				mxError:=FALSE;
				mxDone:=FALSE;
				ABB:=0;
			END_IF
END_CASE



IF gvl.ixEmergencyStop THEN
	ABB:=1000;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="ABBPickLeaveBuffer">
      <LineId Id="198" Count="1" />
      <LineId Id="378" Count="0" />
      <LineId Id="200" Count="1" />
      <LineId Id="383" Count="0" />
      <LineId Id="379" Count="3" />
      <LineId Id="202" Count="1" />
      <LineId Id="394" Count="4" />
      <LineId Id="387" Count="0" />
      <LineId Id="399" Count="1" />
      <LineId Id="402" Count="2" />
      <LineId Id="388" Count="1" />
      <LineId Id="405" Count="5" />
      <LineId Id="390" Count="0" />
      <LineId Id="411" Count="2" />
      <LineId Id="418" Count="0" />
      <LineId Id="416" Count="1" />
      <LineId Id="414" Count="0" />
      <LineId Id="419" Count="74" />
      <LineId Id="391" Count="1" />
      <LineId Id="385" Count="0" />
      <LineId Id="204" Count="22" />
      <LineId Id="356" Count="1" />
      <LineId Id="227" Count="39" />
      <LineId Id="358" Count="1" />
      <LineId Id="267" Count="40" />
      <LineId Id="362" Count="1" />
      <LineId Id="308" Count="33" />
      <LineId Id="495" Count="4" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>